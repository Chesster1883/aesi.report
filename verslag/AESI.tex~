\documentclass[a4paper,10pt]{article}
\usepackage[margin=3cm, nohead]{geometry}

\usepackage{graphicx}

\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}

\begin{document}

\begin{titlepage}
\begin{center}
\includegraphics[width=1\textwidth]{uva}\\[1cm]

\HRule \\[0.4cm]
{ \huge \bfseries Tweedejaarsproject A.E.S.I.}\\[0.4cm]

\HRule \\[1cm]

\textsc{\LARGE  Artificial Evolution and Swarm Intelligence}\\[0.5cm]
\textsc{\Large  Werkplan}\\[1cm]

\begin{tabular*}{0.95\textwidth}{@{\extracolsep{\fill}} l c r}
Jeroen \textsc{Rooijmans}	& Maarten \textsc{Inja}     & Maarten \textsc{de Waard} \\
\textsc{5887410}                &\textsc{5872464}           &\textsc{5894883}\\
\end{tabular*}

\vfill \today
\end{center}
\end{titlepage}
\tableofcontents \pagebreak

\section{Introduction}
During this project we will attempt to create powerful agents using Genetic Programming in the RoboCode environment\footnote{RoboCode home page: http://robocode.sourceforge.net/}.

We will compare A.I. generated by Genetic Programming\footnote{RoboCode with JGAP home page: http://jgap.sourceforge.net/doc/robocode/robocode.html} with self written A.I. and Robocode bots that have proven to be powerful, a ranking can be found on RoboRumble\footnote{RoboRumble home page: http://robowiki.net/wiki/RoboRumble}.
We will also use the RoboResearch \footnote{RoboResearch home page: http://robowiki.net/wiki/RoboResearch} tool to test the performance of our bots in different challenges. 
We will furthermore try to create powerful team behaviour.
The code for this project will be written in Java and available on our Google Code page \footnote{Google Code page: http://code.google.com/p/aesi/}.
We planned our activities with the Gantt chart that can be found in Appendix A.

\section{Project goals}
The main goal of this project is creating powerfull A.I. for the RoboCode environment using evolutionary processes.
To achieve this goal, we first need to anwser some more basic questions
\begin{itemize}
 \item What is powerful behavior for a single bot?
 \item How can powerful behavior be generated using genetic programming?
 \item What is powerful behavior for a team of bots?
 \item How can powerful team behavior be generated using genetic programming? (optional)
\end{itemize}

\section{Method}
In order to create a powerfull agent using G.P. (genetic programming), we first need to understand the underlying principles. This implies research on two subjects, powerfull behavior in RoboCode and genetic programming.
After aquirering enough information, we will start implementing the genetic algoritms, this will be done using the JGAP java framework \footnote{JPAG home page: http://jgap.sourceforge.net/}.\\
In order to test our results, we will use several tools.
\begin{itemize}
	\item Fitness function\\
	this function tells us how powerfull the bot is
	\item RobotResearch\\
	This tool is mentioned in the introduction, it tests a bot against various opponents
	\item Self written A.I.\\
	We will develop our own bot in order to test if generating bots using genetic programming is in fact profitable
	\item Known strong A.I.\\
	Several online RoboCode competition have produces a number of strong bots, we will try to compare these to our evolved bot
	\item RoboCode with JGAP\\
	There already is a JGAP implementation, we can compare our results with this one to see who did a better job
\end{itemize}
If the genetic implementation is done before the end of the project, we will try to generate a team of bots that will compete against other teams, the team tactics will also be generated using G.P.


\subsection{Genome}
We have to plan and create the genome of our bots. Each chromosome represents a potential solution (strong behavior) and is divided into several genes, these genes represent various aspects of the bot (shooting, moving, ect).
These ``chromosomes'' result in a Java file consisting of several methods, for example robotScannedEvent and robotHitWallEvent. These methods can make calls to various functions such as rotateGun. There are countless of different variations that can be disabled, modified or enabled by reproduction, crossover and mutations.

\subsection{Fitness function}
When dealing with evolution, there has to be a process that favors stronger genotypes. We do this by defining a fitness function. This function evaluates every chromosome and defines a fitness, which indicates how well it performs.
The fitness function consist of a certain amount of battles that is simulated. The benchmark results acquired by these simulations define the fitness value.
But to simulate these battles, we have to generate Java code, therefor we have to compile the code which consumes a lot of time. Creating a very accurate fitness function will increase the time-costs, a very sloppy one will decrease both time and accuracy, so we will have to find a balance to strike the golden mean.

\subsection{Evolve}
The evolutionary processes are done by the JGAP framework. Genes with a stronger fitness value have a better chance of being selected for next generations. The selected genes will be written into the Java code and the process repeats itself until either a certain amount of generations have evolved or a certain predefined fitness value is achieved.
After each evolution cycle, we check if the new Java code contains any satisfactory solutions. If so then the process is done

\newpage
\section{Planning}
\subsection{Documentation}
\begin{itemize}
 \item create workplan, everybody
 \item round of halfway report and presentation, M. de Waard
 \item present halfway presentation, everybody
 \item finish end report and presentation, J. Rooijmans
 \item present final product, everybody
 \item maintain documentation, M. Inja
\end{itemize}

\subsection{Initiation}
\begin{itemize}
\item create planning and set up websites, M. Inja
\item present workplan, everybody
\item familarization with programs, M. Inja, M. de Waard
\item read articles about genetic algoritms, J. Rooijmans
\end{itemize}

\subsection{Genetic programming, single bots}
\begin{itemize}
\item create genotype, J. Rooijmans
\item create fitness function, M. de Waard
\item evolve, M. Inja
\end{itemize}

\subsection{Test phase}
\begin{itemize}
\item benchmark with RoboResearch, M. de Waard
\item compare RoboCode with JPAG, M. Inja
\item design and compare with own bot, everybody
\item compare with bots from the internet, J. Rooijmans
\end{itemize}


\subsection{Genetic programming, teams}
\begin{itemize}
\item create genotype, J. Rooijmans
\item create fitness function, M. de Waard
\item evolve, M. Inja
\item benchmark, everybody
\end{itemize}

\newpage
\appendix
\section{Planning}
\label{planning}
\includegraphics[height=0.75\textwidth, angle=-90]{planning.png}


\end{document}
